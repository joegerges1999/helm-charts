{{- if .Values.deployment.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.app }}
    team: {{ .Values.team }}
  name: {{ .Values.team }}-{{ .Values.app }}-deployment
spec: 
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app }}
      team: {{ .Values.team }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        team: {{ .Values.team }}
    spec:
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      initContainers:
        # - name: fetching-jar
        #   image: {{ .Values.dockerRegistry }}busybox
        #   command:
        #   - sh
        #   - -c
        #   - export RELEASE=20180127 && busybox wget -O "/opt/fitnesse/fitnesse-standalone.jar" "http://www.fitnesse.org/fitnesse-standalone.jar?responder=releaseDownload&release=$RELEASE" && chmod -R 777 /opt/fitnesse
        #   volumeMounts:
        #   - mountPath: /opt/fitnesse
        #     name: fitnesse-data
        {{- range .Values.properties }}
        - name: plugins-properties-{{ .name | lower }}
          image: {{ $.Values.dockerRegistry }}busybox
          command:
          - sh
          - -c 
          - echo "{{ .name }}={{ .value }}" >> /opt/fitnesse/plugins.properties && chmod -R 777 /opt/fitnesse
          volumeMounts:
          - mountPath: /opt/fitnesse
            name: fitnesse-data
        {{- end }}
      containers:
        - name: fitnesse
          image: {{ .Values.dockerRegistry }}{{ .Values.fitnesse.image.name }}:{{ .Values.fitnesse.image.tag }}
          ports:
          - containerPort: {{ .Values.fitnesse.port }}
          {{- if .Values.cappedRequests.enabled }}
          resources:
            requests:
              cpu: {{ .Values.cappedRequests.requests.cpu }}
              memory: {{ .Values.cappedRequests.requests.memory }}
            limits:
              cpu: {{ .Values.cappedRequests.limits.cpu }}
              memory: {{ .Values.cappedRequests.limits.memory }}
          {{- end }}
          {{- if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /{{ .Values.fitnesse.webcontext }}
              port: {{ .Values.fitnesse.port }}
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /{{ .Values.fitnesse.webcontext }}
              port: {{ .Values.fitnesse.port }}
            initialDelaySeconds: {{ .Values.probes.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.probes.readinessProbe.failureThreshold }}
          {{- end }}
      {{- if .Values.persistance.enabled }}
          volumeMounts:
          - mountPath: /opt/fitnesse
            name: fitnesse-data
      volumes:
      - name: fitnesse-data
        persistentVolumeClaim:
          claimName: {{ .Values.team }}-{{ .Values.app }}-data-pvc
      {{- end }}
{{- end }}